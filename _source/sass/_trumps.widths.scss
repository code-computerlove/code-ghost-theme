// A mixin to spit out our width classes. Pass in the columns we want the widths
// to have, and an optional suffix for responsive widths. E.g. to create thirds
// and quarters for a small breakpoint:
//
// @include widths(3 4, -sm);

@mixin widths($widths-columns, $widths-breakpoint: null) {

	// Loop through the number of columns for each denominator of our fractions.
	@each $widths-denominator in $widths-columns {

		// Begin creating a numberator for our fraction up until we hit the
		// denominator.
		@for $widths-numerator from 1 through $widths-denominator {

			// Build a class in the format `.u-3/4` or `.u-3-of-4`.
			.u-#{$widths-numerator}\/#{$widths-denominator}#{$widths-breakpoint} {
				width: ($widths-numerator / $widths-denominator) * 100% !important; // scss-lint:disable ImportantRule
			}

		}

	}

}

// A series of width helper classes that you can use to size things like grid
// systems. Classes take a fraction-like format (e.g. `.u-2/3`). Use these in
// your markup:
//
// <div class="u-1/3">

.u-1\/1 {  // scss-lint:disable SelectorFormat
	width: 100%;
}

@include widths(3 4);

@include respond-min(sm) {
	@include widths(2, '\\@sm');
};

@include respond-min(md) {
	@include widths(3 6, '\\@md');
};

@include respond-min(lg) {
	@include widths(4 8, '\\@lg');
};

@include respond-min(post_float) {
	@include widths(3, '\\@post_float');
};
